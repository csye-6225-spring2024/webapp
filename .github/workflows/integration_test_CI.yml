name: Workflow CI
 
on:
  pull_request:
    branches:
      - main
 
env:
  DIALECT: ${{ secrets.DIALECT }}
  HOST: ${{ secrets.HOST }}
  DB_USER: ${{ secrets.DB_USER }}
  DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
  DB: ${{ secrets.DB }}
 
jobs:
  build:
    name: test-checker
    runs-on: ubuntu-latest
      
    strategy:
      matrix:
        node-version: [20.x]
 
    steps:
 
      - name: Install MySQL
        run: |
 
          sudo systemctl start mysql
          sudo systemctl status mysql
 
      - name: Configure MySQL
        run: |
         sudo mysql -u root -p"${{ secrets.MYSQL_ROOT_PASSWORD }}" -e "CREATE DATABASE IF NOT EXISTS ${{ secrets.DB }};"
         sudo mysql -u root -p"${{ secrets.MYSQL_ROOT_PASSWORD }}" -e "CREATE USER IF NOT EXISTS '${{ secrets.DB_USER }}'@'localhost' IDENTIFIED BY '${{ secrets.DB_PASSWORD }}';"
         sudo mysql -u root -p"${{ secrets.MYSQL_ROOT_PASSWORD }}" -e "GRANT ALL PRIVILEGES ON ${{ secrets.DB }}.* TO '${{ secrets.DB_USER }}'@'localhost';"
         sudo mysql -u root -p"${{ secrets.MYSQL_ROOT_PASSWORD }}" -e "FLUSH PRIVILEGES;"
 
      - uses: actions/checkout@v2
 
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      
      - name: Debug
        run: |
          echo "MYSQL_DIALECT: $MYSQL_DIALECT"
          echo "MYSQL_HOST: $MYSQL_HOST"
          echo "DB_USER: $DB_USER"
          echo "DB_PASSWORD: $DB_PASSWORD"
          echo "DB_NAME: $DB_NAME"
 
      # - name: Create secrets directory
      #   run: mkdir -p secrets
 
      - name: Set up environment variables
        run: |
          echo "DB_USER=${{ secrets.DB_USER }}" >> $GITHUB_ENV
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> $GITHUB_ENV
          echo "DB=${{ secrets.DB }}" >> $GITHUB_ENV
          echo "MYSQL_HOST=${{ secrets.MYSQL_HOST }}" >> $GITHUB_ENV
 
 
          echo "DB_USER=${{ secrets.DB_USER}}" > .env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
          echo "DB=${{ secrets.DB }}" >> .env
          echo "HOST=${{ secrets.HOST }}" >> .env
          echo "DIALECT=${{ secrets.DIALECT }}" >> .env
 
      - name: Install Dependencies
        run: npm install
 
      - name: Run Tests
        run: npm test
 