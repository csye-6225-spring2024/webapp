name: Workflow CI

on:
  pull_request:
    branches:
      - main

jobs:
  build:
    name: test-checker
    runs-on: ubuntu-latest
      
    strategy:
      matrix:
        node-version: [20.x]

    steps:

      # Install MySQL
      - name: Install MySQL
        run: |
          sudo systemctl start mysql
          sudo systemctl status mysql

      # Configure MySQL
      - name: Configure MySQL
        run: |
          sudo mysql -u root -p"${{ secrets.MYSQL_ROOT_PASSWORD }}" -e "CREATE DATABASE IF NOT EXISTS ${{ secrets.DB }};"
          sudo mysql -u root -p"${{ secrets.MYSQL_ROOT_PASSWORD }}" -e "CREATE USER IF NOT EXISTS '${{ secrets.DB_USER }}'@'localhost' IDENTIFIED BY '${{ secrets.DB_PASSWORD }}';"
          sudo mysql -u root -p"${{ secrets.MYSQL_ROOT_PASSWORD }}" -e "GRANT ALL PRIVILEGES ON ${{ secrets.DB }}.* TO '${{ secrets.DB_USER }}'@'localhost';"
          sudo mysql -u root -p"${{ secrets.MYSQL_ROOT_PASSWORD }}" -e "FLUSH PRIVILEGES;"

      # Checkout the repository
      - uses: actions/checkout@v2

      # Use Node.js version specified in matrix
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
    
      # Set up environment variables
      - name: Set up environment variables
        run: |
          echo "DB_USER=${{ secrets.DB_USER}}" > .env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
          echo "DB=${{ secrets.DB }}" >> .env
          echo "HOST=${{ secrets.HOST }}" >> .env
          echo "DIALECT=${{ secrets.DIALECT }}" >> .env

      # Install dependencies
      - name: Install Dependencies
        run: npm install

      # Start the application
      - name: Start the application
        run: npm start &

      # Wait for the application to be ready
      - name: Wait for the application to be ready
        run: |
          sleep 10
          until curl -s http://localhost:8080; do
            sleep 5
          done

      # Run tests
      - name: Run Tests
        run: npm test

      - name: Packer init
        run: packer init

      # Packer formatting
      - name: Packer fmt
        run: packer fmt ./packer-config

      # Packer validation
      - name: Packer validate
        run: packer validate ./packer-config

